// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CampaignFactoryDeployed extends ethereum.Event {
  get params(): CampaignFactoryDeployed__Params {
    return new CampaignFactoryDeployed__Params(this);
  }
}

export class CampaignFactoryDeployed__Params {
  _event: CampaignFactoryDeployed;

  constructor(event: CampaignFactoryDeployed) {
    this._event = event;
  }

  get campaignFactory(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get governance(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get campaignImplementation(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get campaignRequestImplementation(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get campaignVoteImplementation(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get campaignRewardImplementation(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get campaignIndex(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class Factory extends ethereum.SmartContract {
  static bind(address: Address): Factory {
    return new Factory("Factory", address);
  }

  deployedCampaignCount(): BigInt {
    let result = super.call(
      "deployedCampaignCount",
      "deployedCampaignCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_deployedCampaignCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "deployedCampaignCount",
      "deployedCampaignCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  deployedCampaigns(param0: Address): Address {
    let result = super.call(
      "deployedCampaigns",
      "deployedCampaigns(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_deployedCampaigns(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployedCampaigns",
      "deployedCampaigns(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateCampaignFactoryCall extends ethereum.Call {
  get inputs(): CreateCampaignFactoryCall__Inputs {
    return new CreateCampaignFactoryCall__Inputs(this);
  }

  get outputs(): CreateCampaignFactoryCall__Outputs {
    return new CreateCampaignFactoryCall__Outputs(this);
  }
}

export class CreateCampaignFactoryCall__Inputs {
  _call: CreateCampaignFactoryCall;

  constructor(call: CreateCampaignFactoryCall) {
    this._call = call;
  }

  get _campaignFactoryImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _campaignImplementation(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _campaignRequestImplementation(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _campaignVoteImplementation(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _campaignRewardImplementation(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _governance(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _config(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }
}

export class CreateCampaignFactoryCall__Outputs {
  _call: CreateCampaignFactoryCall;

  constructor(call: CreateCampaignFactoryCall) {
    this._call = call;
  }
}
