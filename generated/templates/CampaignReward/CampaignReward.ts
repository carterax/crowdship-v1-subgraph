// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CampaignRewardOwnerSet extends ethereum.Event {
  get params(): CampaignRewardOwnerSet__Params {
    return new CampaignRewardOwnerSet__Params(this);
  }
}

export class CampaignRewardOwnerSet__Params {
  _event: CampaignRewardOwnerSet;

  constructor(event: CampaignRewardOwnerSet) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RewardCreated extends ethereum.Event {
  get params(): RewardCreated__Params {
    return new RewardCreated__Params(this);
  }
}

export class RewardCreated__Params {
  _event: RewardCreated;

  constructor(event: RewardCreated) {
    this._event = event;
  }

  get rewardId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get deliveryDate(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get stock(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get hashedReward(): string {
    return this._event.parameters[4].value.toString();
  }

  get active(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }
}

export class RewardDestroyed extends ethereum.Event {
  get params(): RewardDestroyed__Params {
    return new RewardDestroyed__Params(this);
  }
}

export class RewardDestroyed__Params {
  _event: RewardDestroyed;

  constructor(event: RewardDestroyed) {
    this._event = event;
  }

  get rewardId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RewardModified extends ethereum.Event {
  get params(): RewardModified__Params {
    return new RewardModified__Params(this);
  }
}

export class RewardModified__Params {
  _event: RewardModified;

  constructor(event: RewardModified) {
    this._event = event;
  }

  get rewardId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get deliveryDate(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get stock(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get active(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class RewardRecipientAdded extends ethereum.Event {
  get params(): RewardRecipientAdded__Params {
    return new RewardRecipientAdded__Params(this);
  }
}

export class RewardRecipientAdded__Params {
  _event: RewardRecipientAdded;

  constructor(event: RewardRecipientAdded) {
    this._event = event;
  }

  get rewardRecipientId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get rewardId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class RewardRecipientApproval extends ethereum.Event {
  get params(): RewardRecipientApproval__Params {
    return new RewardRecipientApproval__Params(this);
  }
}

export class RewardRecipientApproval__Params {
  _event: RewardRecipientApproval;

  constructor(event: RewardRecipientApproval) {
    this._event = event;
  }

  get rewardRecipientId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RewardStockIncreased extends ethereum.Event {
  get params(): RewardStockIncreased__Params {
    return new RewardStockIncreased__Params(this);
  }
}

export class RewardStockIncreased__Params {
  _event: RewardStockIncreased;

  constructor(event: RewardStockIncreased) {
    this._event = event;
  }

  get rewardId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get count(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RewarderApproval extends ethereum.Event {
  get params(): RewarderApproval__Params {
    return new RewarderApproval__Params(this);
  }
}

export class RewarderApproval__Params {
  _event: RewarderApproval;

  constructor(event: RewarderApproval) {
    this._event = event;
  }

  get rewardRecipientId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CampaignReward__rewardRecipientsResult {
  value0: BigInt;
  value1: Address;
  value2: boolean;
  value3: boolean;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: boolean,
    value3: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    return map;
  }
}

export class CampaignReward__rewardsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: string;
  value4: boolean;
  value5: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: string,
    value4: boolean,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }
}

export class CampaignReward extends ethereum.SmartContract {
  static bind(address: Address): CampaignReward {
    return new CampaignReward("CampaignReward", address);
  }

  campaign(): Address {
    let result = super.call("campaign", "campaign():(address)", []);

    return result[0].toAddress();
  }

  try_campaign(): ethereum.CallResult<Address> {
    let result = super.tryCall("campaign", "campaign():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  campaignFactoryInterface(): Address {
    let result = super.call(
      "campaignFactoryInterface",
      "campaignFactoryInterface():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_campaignFactoryInterface(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "campaignFactoryInterface",
      "campaignFactoryInterface():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  campaignInterface(): Address {
    let result = super.call(
      "campaignInterface",
      "campaignInterface():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_campaignInterface(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "campaignInterface",
      "campaignInterface():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  campaignRewardAddress(): Address {
    let result = super.call(
      "campaignRewardAddress",
      "campaignRewardAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_campaignRewardAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "campaignRewardAddress",
      "campaignRewardAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  rewardRecipients(param0: BigInt): CampaignReward__rewardRecipientsResult {
    let result = super.call(
      "rewardRecipients",
      "rewardRecipients(uint256):(uint256,address,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new CampaignReward__rewardRecipientsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toBoolean(),
      result[3].toBoolean()
    );
  }

  try_rewardRecipients(
    param0: BigInt
  ): ethereum.CallResult<CampaignReward__rewardRecipientsResult> {
    let result = super.tryCall(
      "rewardRecipients",
      "rewardRecipients(uint256):(uint256,address,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CampaignReward__rewardRecipientsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toBoolean(),
        value[3].toBoolean()
      )
    );
  }

  rewardToRewardRecipientCount(param0: BigInt): BigInt {
    let result = super.call(
      "rewardToRewardRecipientCount",
      "rewardToRewardRecipientCount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_rewardToRewardRecipientCount(
    param0: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "rewardToRewardRecipientCount",
      "rewardToRewardRecipientCount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rewards(param0: BigInt): CampaignReward__rewardsResult {
    let result = super.call(
      "rewards",
      "rewards(uint256):(uint256,uint256,uint256,string,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new CampaignReward__rewardsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toString(),
      result[4].toBoolean(),
      result[5].toBoolean()
    );
  }

  try_rewards(
    param0: BigInt
  ): ethereum.CallResult<CampaignReward__rewardsResult> {
    let result = super.tryCall(
      "rewards",
      "rewards(uint256):(uint256,uint256,uint256,string,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CampaignReward__rewardsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toString(),
        value[4].toBoolean(),
        value[5].toBoolean()
      )
    );
  }

  userRewardCount(param0: Address): BigInt {
    let result = super.call(
      "userRewardCount",
      "userRewardCount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_userRewardCount(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userRewardCount",
      "userRewardCount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  assignReward(_rewardId: BigInt, _amount: BigInt, _user: Address): BigInt {
    let result = super.call(
      "assignReward",
      "assignReward(uint256,uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_rewardId),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_user)
      ]
    );

    return result[0].toBigInt();
  }

  try_assignReward(
    _rewardId: BigInt,
    _amount: BigInt,
    _user: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "assignReward",
      "assignReward(uint256,uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_rewardId),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_user)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class __CampaignReward_initCall extends ethereum.Call {
  get inputs(): __CampaignReward_initCall__Inputs {
    return new __CampaignReward_initCall__Inputs(this);
  }

  get outputs(): __CampaignReward_initCall__Outputs {
    return new __CampaignReward_initCall__Outputs(this);
  }
}

export class __CampaignReward_initCall__Inputs {
  _call: __CampaignReward_initCall;

  constructor(call: __CampaignReward_initCall) {
    this._call = call;
  }

  get _campaignFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _campaign(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class __CampaignReward_initCall__Outputs {
  _call: __CampaignReward_initCall;

  constructor(call: __CampaignReward_initCall) {
    this._call = call;
  }
}

export class CreateRewardCall extends ethereum.Call {
  get inputs(): CreateRewardCall__Inputs {
    return new CreateRewardCall__Inputs(this);
  }

  get outputs(): CreateRewardCall__Outputs {
    return new CreateRewardCall__Outputs(this);
  }
}

export class CreateRewardCall__Inputs {
  _call: CreateRewardCall;

  constructor(call: CreateRewardCall) {
    this._call = call;
  }

  get _value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _deliveryDate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _stock(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _hashedReward(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _active(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class CreateRewardCall__Outputs {
  _call: CreateRewardCall;

  constructor(call: CreateRewardCall) {
    this._call = call;
  }
}

export class AssignRewardCall extends ethereum.Call {
  get inputs(): AssignRewardCall__Inputs {
    return new AssignRewardCall__Inputs(this);
  }

  get outputs(): AssignRewardCall__Outputs {
    return new AssignRewardCall__Outputs(this);
  }
}

export class AssignRewardCall__Inputs {
  _call: AssignRewardCall;

  constructor(call: AssignRewardCall) {
    this._call = call;
  }

  get _rewardId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _user(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class AssignRewardCall__Outputs {
  _call: AssignRewardCall;

  constructor(call: AssignRewardCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ModifyRewardCall extends ethereum.Call {
  get inputs(): ModifyRewardCall__Inputs {
    return new ModifyRewardCall__Inputs(this);
  }

  get outputs(): ModifyRewardCall__Outputs {
    return new ModifyRewardCall__Outputs(this);
  }
}

export class ModifyRewardCall__Inputs {
  _call: ModifyRewardCall;

  constructor(call: ModifyRewardCall) {
    this._call = call;
  }

  get _rewardId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _deliveryDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _stock(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _active(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class ModifyRewardCall__Outputs {
  _call: ModifyRewardCall;

  constructor(call: ModifyRewardCall) {
    this._call = call;
  }
}

export class IncreaseRewardStockCall extends ethereum.Call {
  get inputs(): IncreaseRewardStockCall__Inputs {
    return new IncreaseRewardStockCall__Inputs(this);
  }

  get outputs(): IncreaseRewardStockCall__Outputs {
    return new IncreaseRewardStockCall__Outputs(this);
  }
}

export class IncreaseRewardStockCall__Inputs {
  _call: IncreaseRewardStockCall;

  constructor(call: IncreaseRewardStockCall) {
    this._call = call;
  }

  get _rewardId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _count(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseRewardStockCall__Outputs {
  _call: IncreaseRewardStockCall;

  constructor(call: IncreaseRewardStockCall) {
    this._call = call;
  }
}

export class DestroyRewardCall extends ethereum.Call {
  get inputs(): DestroyRewardCall__Inputs {
    return new DestroyRewardCall__Inputs(this);
  }

  get outputs(): DestroyRewardCall__Outputs {
    return new DestroyRewardCall__Outputs(this);
  }
}

export class DestroyRewardCall__Inputs {
  _call: DestroyRewardCall;

  constructor(call: DestroyRewardCall) {
    this._call = call;
  }

  get _rewardId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DestroyRewardCall__Outputs {
  _call: DestroyRewardCall;

  constructor(call: DestroyRewardCall) {
    this._call = call;
  }
}

export class CampaignSentRewardCall extends ethereum.Call {
  get inputs(): CampaignSentRewardCall__Inputs {
    return new CampaignSentRewardCall__Inputs(this);
  }

  get outputs(): CampaignSentRewardCall__Outputs {
    return new CampaignSentRewardCall__Outputs(this);
  }
}

export class CampaignSentRewardCall__Inputs {
  _call: CampaignSentRewardCall;

  constructor(call: CampaignSentRewardCall) {
    this._call = call;
  }

  get _rewardRecipientId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _status(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class CampaignSentRewardCall__Outputs {
  _call: CampaignSentRewardCall;

  constructor(call: CampaignSentRewardCall) {
    this._call = call;
  }
}

export class UserReceivedCampaignRewardCall extends ethereum.Call {
  get inputs(): UserReceivedCampaignRewardCall__Inputs {
    return new UserReceivedCampaignRewardCall__Inputs(this);
  }

  get outputs(): UserReceivedCampaignRewardCall__Outputs {
    return new UserReceivedCampaignRewardCall__Outputs(this);
  }
}

export class UserReceivedCampaignRewardCall__Inputs {
  _call: UserReceivedCampaignRewardCall;

  constructor(call: UserReceivedCampaignRewardCall) {
    this._call = call;
  }

  get _rewardRecipientId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UserReceivedCampaignRewardCall__Outputs {
  _call: UserReceivedCampaignRewardCall;

  constructor(call: UserReceivedCampaignRewardCall) {
    this._call = call;
  }
}

export class RenounceRewardsCall extends ethereum.Call {
  get inputs(): RenounceRewardsCall__Inputs {
    return new RenounceRewardsCall__Inputs(this);
  }

  get outputs(): RenounceRewardsCall__Outputs {
    return new RenounceRewardsCall__Outputs(this);
  }
}

export class RenounceRewardsCall__Inputs {
  _call: RenounceRewardsCall;

  constructor(call: RenounceRewardsCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RenounceRewardsCall__Outputs {
  _call: RenounceRewardsCall;

  constructor(call: RenounceRewardsCall) {
    this._call = call;
  }
}

export class TransferRewardsCall extends ethereum.Call {
  get inputs(): TransferRewardsCall__Inputs {
    return new TransferRewardsCall__Inputs(this);
  }

  get outputs(): TransferRewardsCall__Outputs {
    return new TransferRewardsCall__Outputs(this);
  }
}

export class TransferRewardsCall__Inputs {
  _call: TransferRewardsCall;

  constructor(call: TransferRewardsCall) {
    this._call = call;
  }

  get _oldAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class TransferRewardsCall__Outputs {
  _call: TransferRewardsCall;

  constructor(call: TransferRewardsCall) {
    this._call = call;
  }
}
