// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VoteCancelled extends ethereum.Event {
  get params(): VoteCancelled__Params {
    return new VoteCancelled__Params(this);
  }
}

export class VoteCancelled__Params {
  _event: VoteCancelled;

  constructor(event: VoteCancelled) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get requestId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get support(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class Voted extends ethereum.Event {
  get params(): Voted__Params {
    return new Voted__Params(this);
  }
}

export class Voted__Params {
  _event: Voted;

  constructor(event: Voted) {
    this._event = event;
  }

  get voteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get requestId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get support(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class CampaignVote__votesResult {
  value0: i32;
  value1: BigInt;
  value2: boolean;
  value3: Address;

  constructor(value0: i32, value1: BigInt, value2: boolean, value3: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    return map;
  }
}

export class CampaignVote extends ethereum.SmartContract {
  static bind(address: Address): CampaignVote {
    return new CampaignVote("CampaignVote", address);
  }

  campaignContract(): Address {
    let result = super.call(
      "campaignContract",
      "campaignContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_campaignContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "campaignContract",
      "campaignContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  campaignFactoryContract(): Address {
    let result = super.call(
      "campaignFactoryContract",
      "campaignFactoryContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_campaignFactoryContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "campaignFactoryContract",
      "campaignFactoryContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  campaignID(): BigInt {
    let result = super.call("campaignID", "campaignID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_campaignID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("campaignID", "campaignID():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  voteId(param0: Address, param1: BigInt): BigInt {
    let result = super.call("voteId", "voteId(address,uint256):(uint256)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromUnsignedBigInt(param1)
    ]);

    return result[0].toBigInt();
  }

  try_voteId(param0: Address, param1: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("voteId", "voteId(address,uint256):(uint256)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromUnsignedBigInt(param1)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  votes(param0: BigInt): CampaignVote__votesResult {
    let result = super.call(
      "votes",
      "votes(uint256):(uint8,uint256,bool,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new CampaignVote__votesResult(
      result[0].toI32(),
      result[1].toBigInt(),
      result[2].toBoolean(),
      result[3].toAddress()
    );
  }

  try_votes(param0: BigInt): ethereum.CallResult<CampaignVote__votesResult> {
    let result = super.tryCall(
      "votes",
      "votes(uint256):(uint8,uint256,bool,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CampaignVote__votesResult(
        value[0].toI32(),
        value[1].toBigInt(),
        value[2].toBoolean(),
        value[3].toAddress()
      )
    );
  }
}

export class __CampaignVote_initCall extends ethereum.Call {
  get inputs(): __CampaignVote_initCall__Inputs {
    return new __CampaignVote_initCall__Inputs(this);
  }

  get outputs(): __CampaignVote_initCall__Outputs {
    return new __CampaignVote_initCall__Outputs(this);
  }
}

export class __CampaignVote_initCall__Inputs {
  _call: __CampaignVote_initCall;

  constructor(call: __CampaignVote_initCall) {
    this._call = call;
  }

  get _campaignFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _campaign(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _campaignId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class __CampaignVote_initCall__Outputs {
  _call: __CampaignVote_initCall;

  constructor(call: __CampaignVote_initCall) {
    this._call = call;
  }
}

export class VoteOnRequestCall extends ethereum.Call {
  get inputs(): VoteOnRequestCall__Inputs {
    return new VoteOnRequestCall__Inputs(this);
  }

  get outputs(): VoteOnRequestCall__Outputs {
    return new VoteOnRequestCall__Outputs(this);
  }
}

export class VoteOnRequestCall__Inputs {
  _call: VoteOnRequestCall;

  constructor(call: VoteOnRequestCall) {
    this._call = call;
  }

  get _requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _support(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class VoteOnRequestCall__Outputs {
  _call: VoteOnRequestCall;

  constructor(call: VoteOnRequestCall) {
    this._call = call;
  }
}

export class CancelVoteCall extends ethereum.Call {
  get inputs(): CancelVoteCall__Inputs {
    return new CancelVoteCall__Inputs(this);
  }

  get outputs(): CancelVoteCall__Outputs {
    return new CancelVoteCall__Outputs(this);
  }
}

export class CancelVoteCall__Inputs {
  _call: CancelVoteCall;

  constructor(call: CancelVoteCall) {
    this._call = call;
  }

  get _requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelVoteCall__Outputs {
  _call: CancelVoteCall;

  constructor(call: CancelVoteCall) {
    this._call = call;
  }
}
